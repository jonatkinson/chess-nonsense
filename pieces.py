# This Python file uses the following encoding: utf-8

class Piece(object):
    """
    This is a single Piece.
    """

    def __init__(self, player):
        """
        This initialises the state of the piece.
        """

        self.player = player


    def moves(self):
        """
        This returns the array of allowed moves for the piece.
        """

        valid_moves = self.valid_moves
        if self.player == "white":
            return valid_moves
        if self.player == "black":
            return valid_moves[::-1]

    def render_moves(self):
        valid_moves = self.moves()
        for y in range(8):
            row = ""
            for x in range(8):
                piece = valid_moves[x][y]
                if piece == 0:
                    row += "1"
                else:
                    row += "0"
            print row


    def __str__(self):
        """
        This returns a unicode representation of the piece.
        """

        if self.player == "black":
            return self.representation()[1].encode('utf-8')
        else:
            return self.representation()[0].encode('utf-8')

class Pawn(Piece):
    """
    This is a pawn.
    """

    def __init__(self, player):
        """
        This sets the parameters of the piece.
        """

        super(Pawn, self).__init__(player)

        self.valid_moves = [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ]

    def representation(self):
        return u'♙', u'♟'

class Rook(Piece):
    """
    This is a rook.
    """

    def __init__(self, player):
        """
        This sets the parameters of the piece.
        """

        super(Rook, self).__init__(player)

        self.valid_moves = [
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [1,1,1,1,1,1,1,0,1,1,1,1,1,1,1],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
        ]

    def representation(self):
        return u'♖', u'♜'

class Knight(Piece):
    """
    This is a knight.
    """

    def __init__(self, player):
        """
        This sets the parameters of the piece.
        """

        super(Knight, self).__init__(player)

        self.valid_moves = [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],
            [0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],
            [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ]

    def representation(self):
        return u'♘', u'♞'

class Bishop(Piece):
    """
    This is a bishop.
    """

    def __init__(self, player):
        """
        This sets the parameters of the piece.
        """

        super(Bishop, self).__init__(player)

        self.valid_moves = [
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
            [0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],
            [0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],
            [0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],
            [0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],
            [0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],
            [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],
            [0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],
            [0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],
            [0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],
            [0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],
            [0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],
            [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        ]

    def representation(self):
        return u'♙', u'♟'

class King(Piece):
    """
    This is a king.
    """

    def __init__(self, player):
        """
        This sets the parameters of the piece.
        """

        super(King, self).__init__(player)

        self.valid_moves = [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,1,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,1,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ]

    def representation(self):
        return u'♔', u'♚'

class Queen(Piece):
    """
    This is a queen.
    """

    def __init__(self, player):
        """
        This sets the parameters of the piece.
        """

        super(Queen, self).__init__(player)

        self.valid_moves = [
            [1,0,0,0,0,0,0,1,0,0,0,0,0,0,1],
            [0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],
            [0,0,1,0,0,0,0,1,0,0,0,0,1,0,0],
            [0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],
            [0,0,0,0,1,0,0,1,0,0,1,0,0,0,0],
            [0,0,0,0,0,1,0,1,0,1,0,0,0,0,0],
            [0,0,0,0,0,0,1,1,1,0,0,0,0,0,0],
            [1,1,1,1,1,1,1,0,1,1,1,1,1,1,1],
            [0,0,0,0,0,0,1,1,1,0,0,0,0,0,0],
            [0,0,0,0,0,1,0,1,0,1,0,0,0,0,0],
            [0,0,0,0,1,0,0,1,0,0,1,0,0,0,0],
            [0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],
            [0,0,1,0,0,0,0,1,0,0,0,0,1,0,0],
            [0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],
            [1,0,0,0,0,0,0,1,0,0,0,0,0,0,1],
        ]

    def representation(self):
        return u'♕', u'♛'
